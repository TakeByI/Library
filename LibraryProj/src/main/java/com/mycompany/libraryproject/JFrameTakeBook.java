/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mycompany.libraryproject;

import java.sql.*;
import java.util.StringTokenizer;
import java.util.logging.Level;
import java.util.logging.Logger;

public class JFrameTakeBook extends javax.swing.JFrame {

    public JFrameTakeBook() {
        initComponents();
        this.setTitle("Взять книгу"); //Название на верху формы
        try {
            Class.forName("org.postgresql.Driver");
            String conToDb = "jdbc:postgresql://localhost:5432/libraryproject";
            connection = (Connection)DriverManager.getConnection(conToDb, "postgres", "qwerty1234");
            connection.setAutoCommit(true);
            statement = (Statement) connection.createStatement();
            System.out.println("success");
            
            //заполнение комбобокса, выводящего список людей, из БД
            resultSet = statement.executeQuery("SELECT user_id, user_name FROM userlist");
            while (resultSet.next()) {
                jComboBoxUserList.addItem(resultSet.getInt("user_id") + ". " + resultSet.getString("user_name"));
            }
            //заполнение комбобокса, выводящего список книг, лежащих в библиотеке и не взятых никем, из БД
            resultSet2 = statement.executeQuery("SELECT book_id, book_name FROM booklist WHERE book_in_lib = true");
            while (resultSet2.next()) {
                jComboBoxBookList.addItem(resultSet2.getInt("book_id") + ". " + resultSet2.getString("book_name"));
            }
            
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(JFrameBookUser.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(JFrameBookUser.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jComboBoxUserList = new javax.swing.JComboBox<>();
        jComboBoxBookList = new javax.swing.JComboBox<>();
        jButtonTakeBook = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButtonTakeBook.setText("Взять книгу");
        jButtonTakeBook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonTakeBookActionPerformed(evt);
            }
        });

        jLabel1.setText("Выберите читателя");

        jLabel2.setText("Выберите книгу");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jComboBoxUserList, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)
                        .addComponent(jButtonTakeBook, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jComboBoxBookList, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addContainerGap(55, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jComboBoxUserList, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonTakeBook, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jComboBoxBookList, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(122, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonTakeBookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonTakeBookActionPerformed
        //взятие конкретной книги конкретным человеком
        try {
            lineForDelete = jComboBoxUserList.getSelectedItem().toString();
            strTokenizer = new StringTokenizer(lineForDelete, ".");
            idUser = strTokenizer.nextToken();
            lineForDelete = jComboBoxBookList.getSelectedItem().toString();
            strTokenizer = new StringTokenizer(lineForDelete, ".");
            idBook = strTokenizer.nextToken();
            statement.executeUpdate("INSERT INTO uoblist(fk_user_id, fk_book_id) VALUES (" + idUser + ", " + idBook + ")");//даем человеку книгу, обновив таблицу со взятыми книгами
            statement.executeUpdate("UPDATE booklist SET book_in_lib = false WHERE book_id = " + idBook);//изменяем в списке книг поле book_in_lib
            //закрываем все подключения к БД
            connection.close();
            statement.close();
            resultSet.close();
            resultSet2.close();
            dispose(); //форма закрывается при нажатии на кнопку
        } catch (SQLException ex) {
            Logger.getLogger(JFrameTakeBook.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButtonTakeBookActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JFrameTakeBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JFrameTakeBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JFrameTakeBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFrameTakeBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JFrameTakeBook().setVisible(true);
            }
        });
    }

    Connection connection = null;
    Statement statement = null;
    ResultSet resultSet = null;
    ResultSet resultSet2 = null;
    
    StringTokenizer strTokenizer = null;//класс для разделения строки 
    
    String idUser = "";//переменная для айди человека, с помощью этой переменной делаем запрос в БД для назначения человеку конкретной книги
    String idBook = "";//переменная для айди книги, с помощью этой переменной делаем запрос в БД для назначения человеку конкретной книги
    String lineForDelete = "";//переменная для строки, которую мы разделяем на части с помощью StringTokenizer
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonTakeBook;
    private javax.swing.JComboBox<String> jComboBoxBookList;
    private javax.swing.JComboBox<String> jComboBoxUserList;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    // End of variables declaration//GEN-END:variables
}
